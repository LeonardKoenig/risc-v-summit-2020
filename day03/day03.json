[
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NTAz",
    "description": "Progress has been made in cloud applications and development since 2019. We have Golang, the backbone of the cloud world already upstreamed and many cloud applications can already be built with no changes in RISC-V.In this talk I will speak about the progress for upstreaming and the options you have to develop for the architecture by using containers in a physical or a virtual machine. Key TakeawaysGolang is already fully featured in RISC-V architectureContainers can be used in RISC-VThere are many cloud-ready applications working on RISC-VUpstreaming process is still a WIP",
    "url": "https://player.vimeo.com/video/488684757?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:00:00+00:00",
    "utcendtime": "2020-12-09T23:20:00+00:00",
    "title": "The State of Cloud Applications and Containers for RISC-V",
    "topic": "Community Ecosystem",
    "kind": "Conference",
    "presenter": "Carlos Eduardo de Paula \u00b7 Red Hat",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NTAy",
    "description": "A 20-minute deep dive on Seagate\u2019s RISC-V development efforts will include technical details on two families of RISC-V cores built by Seagate's engineers; how RISC-V has enabled solving issues in a particular use case; and the promise of RISC-V for data security and domain-specific computation in the storage industry.",
    "url": "https://player.vimeo.com/video/488683749?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:00:00+00:00",
    "utcendtime": "2020-12-09T23:20:00+00:00",
    "title": "Fueling the Datasphere: How RISC-V Enables the Storage Ecosystem",
    "topic": "Hardware Cores/SoCs",
    "kind": "Conference",
    "presenter": "Richard Bohn \u00b7 Seagate Technology",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NTAx",
    "description": "seL4 is an operating-system (OS) microkernel designed for safety- and security-critical use. It is characterised by (i) design for security, using capability-based access control that enables fine-grained data-flow and resource control, (ii) world's first OS with a mathematical proof of implementation correctness (i.e. bug-freedom in a very strong sense) (iii) unbeaten performance, (iv) strongest support for mixed-criticality real-time systems. seL4 is open-source and backed by the seL4 Foundation and a growing community of developers and adopters.And seL4's implementation is now proved correct for the RV64 ISA, bringing its strong assurance to RISC-V processors. Extension of this proof to the executable binary is in progress and hoped to conclude by the time of the summit; this will make seL4 the most highly assured OS kernel on any 64-bit architecture.In the talk I will explain what the above means, and how seL4 can benefit critical systems based on RISC-V processors. As an example of a platform designed for highest security, I will discuss the combination of the seL4-based Trentos-M operating system with the HENSOLDT Cyber MiG-V processor. MiG-V combines the open-source CV64 core from ETH Zurich with logic-obfuscation technology for protecting against supply-chain attacks; the combination with seL4 results in unparalleled security.Note the proposal by DornerWorks discussing their experience with porting seL4 to the PolarFire SoC. Key TakeawaysUnderstand what seL4 is, and what makes it specialUnderstand what it means that seL4 is formally verifiedGet an idea of how seL4 is being deployed to protect critical defense and civilian systems",
    "url": "https://player.vimeo.com/video/488683562?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:00:00+00:00",
    "utcendtime": "2020-12-09T23:20:00+00:00",
    "title": "seL4 on RISC-V: Fast, Secure, Open-source and Proved Bug-free OS Kernel",
    "topic": "Software & Tools",
    "kind": "Conference",
    "presenter": "Gernot Heiser \u00b7 UNSW Sydney and Data61, CSIRO",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NTAw",
    "description": "In this short talk, we will present Secure-IC company and solutions to secure RISC-V cores. Our solutions are named the Cyber Escort Unit and the Securyzr. The Cyber Escort Unit is a Cyber Security add-on for processor. The Securyzr is an integrated Secure Element used to offer multiple services, such as Secure Boot, for the core.",
    "url": "https://player.vimeo.com/video/488682727?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:20:00+00:00",
    "utcendtime": "2020-12-09T23:30:00+00:00",
    "title": "Tech Talk with Secure-IC: Overview of Secure-IC Solutions to Secure RISC-V Core",
    "topic": "Tech Talk",
    "kind": "Tech Talk",
    "presenter": "Michel Le Rolland \u00b7 Secure-IC",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NTcw",
    "description": "Scale4Edge is a project which brings together industrial partners, universities and small and midium-scale companies supported by the German government in order to create a RISCV based ecosystem. This ecosystem is focused on supporting edge based projects in a variety of applications like industrial automation, automotive and avionic. The project focuses on connecting innovative academic ideas with industrial partners who can take those ideas into the market place. Several industrial partners help in this project to drive the direction and implement prototypes. The project aims to create a tool chain for efficient SW development as well as important HW components for the use in edge projects.Key TakeawaysRISCV based ecosystem thrives in GermanyRISCV based SoCs help to address edge based applicationsEcosystem has to address the application needs for edge projects",
    "url": "https://player.vimeo.com/video/488685286?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:30:00+00:00",
    "utcendtime": "2020-12-09T23:50:00+00:00",
    "title": "Scale4Edge project introduction",
    "topic": "Community Ecosystem",
    "kind": "Conference",
    "presenter": "Wolfgang Ecker \u00b7 Infineon Technologies",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDk5",
    "description": "With all the complexities of implementing a RISC-V ISA compliant CPU and then in a physical silicon layout with packaging and testing, the effort of creating a physical circuit board seems almost inconsequential or trivial. For many semiconductor products, however, the right reference and system development hardware is critical to the product\u2019s success. When communities form around a given platform, collaboration ensues and potentially show-stopping issues for major customers get resolved ahead of engagements. Further, new market opportunities can be uncovered and technology demonstrations become commonplace if a platform can be made pervasively available.This session will primarily explore the pros and cons of licensing printed circuit board designs as open source hardware as well as targeting those boards and designs at community-oriented developers. We\u2019ll explore what this means to accelerating the development of the RISC-V ecosystem. Key TakeawaysAdditional understanding of various definitions of open source hardware Key decision factors for printed circuit board design licensing and support modelMost frequent care-abouts to attract community-oriented system developersUnderstanding of a few possible strategies to incorporate system-level hardware in silicon designHow the RISC-V ecosystem can grow thanks to open source hardware at the PCB level",
    "url": "https://player.vimeo.com/video/488685163?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:30:00+00:00",
    "utcendtime": "2020-12-09T23:50:00+00:00",
    "title": "Does Open Hardware matter at the PCB-level?",
    "topic": "Community Ecosystem",
    "kind": "Conference",
    "presenter": "Jason Kridner \u00b7 BeagleBoard.org Foundation",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDk4",
    "description": "Emerging applications involve complex interactions between large amounts of data and a series of computation steps to process these data. To efficiently handling the movement and processing of these data, modern processors design various complex mechanisms, instruction set extensions, and micro-architectures for their memory subsystem and computation engine, including caches, multi-bank local memories, vector processing engine, multi-issue logic, etc. with certain assumptions and constraints. It is difficult for application/library programmers to understand these constraints and develop their applications/libraries to utilize the potential power of these complex processor designs.To help programmers discover these hidden constraints at the micro-architecture level, we, at Andes, developed AndesClarity, a performance & resource bottleneck analyzer for Andes' RISC-V processor-based subsystems, especially for Andes' newly designed vector processor. It is designed to provide detailed insight into how the user's application performs inside the RISC-V processor complex. Based on configurable design parameters from the user's input, the Andes's RISC-V processor pipeline simulator will generate performance history information as well as cycle accurate/approximate instruction profiling information of how each instruction is executed from initial fetch to completion. The generated information will be used to graphically illustrating performance variations, instruction execution steps, instruction stall cycles, resources utilized/idle, congestions, as well as statistics useful for further optimization of software and/or Andes RISC-V core configurations.In this talk, we will introduce AndesClarity and its features for helping programmers understand the performance and bottlenecks of their vector programs under different architecture and micro-architecture parameters along with some code examples. Key Takeaways Learn processor micro-architecture design constrains that may affect performance.Learn that how a performance & bottleneck analyzer, such as AndesClarity, can help programmers to discover performance issues on their vector algorithms.Features in AndesClarity that can help programmers visualize the performance of their vector programs.How RISC-V vector extension instructions are executed in a RISC-V vector processor.",
    "url": "https://player.vimeo.com/video/488684162?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:30:00+00:00",
    "utcendtime": "2020-12-09T23:50:00+00:00",
    "title": "AndesClarity: a Performance & Bottleneck Analyzer for RISC-V Vector Processors",
    "topic": "Software & Tools",
    "kind": "Conference",
    "presenter": "Chuan-Hua Chang \u00b7 Andes Technology",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDk3",
    "description": "Join us for this live-in-zoom session to meet the speakers and ask follow up questions from today's presentations.  ",
    "url": "https://player.vimeo.com/video/488684316?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:50:00+00:00",
    "utcendtime": "2020-12-10T00:20:00+00:00",
    "title": "LIVE Q&A Forum with Speakers: Room A",
    "topic": "Meet the Speakers: Room A",
    "kind": "Meet the Speakers",
    "presenter": "Paul Shan-Chyun Ku \u00b7 Andes Technology",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDk2",
    "description": "Join us for this live-in-zoom session to meet the speakers and ask follow up questions from today's presentations.  ",
    "url": "https://player.vimeo.com/video/488684316?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-09T23:50:00+00:00",
    "utcendtime": "2020-12-10T00:20:00+00:00",
    "title": "LIVE Q&A Forum with Speakers: Room B",
    "topic": "Meet the Speakers: Room B",
    "kind": "Meet the Speakers",
    "presenter": "Angelos Arelakis \u00b7 ZeroPoint Technologies AB",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDkz",
    "description": "Historically for SoC design based on established processor IP cores the project time and cost estimates for verification range from 60-80%, which does not include the verification work performed by the IP provider. With the design freedoms of RISC-V all SoC adopters will have the options and flexibility to develop a custom processor targeted at just the right optimized solution. The design challenge is to explore these freedoms efficiency and quickly select the optional configuration.The RISC-V processor design verification (DV) task needs to overlap both the design exploration phase and also the SoC development and test work. This is essential when custom extensions are utilized for lightweight inter-processor communications, as the DV of the processor and SoC DV becomes interdependent.Using SystemVerilog UVM test benches with an encapsulated RISC-V reference model helps support a step-and-compare methodology. This tutorial highlights the experience with both identifying potential issues and also the flows for analysis, resolution and ultimately coverage driven metrics for DV plan progress. One of the key requirements for the ecosystem to develop the efficiencies of scale across all implementations is the use and adoption of the RISC-V compliance suite by all developers. The latest test status and details on the distinction between the coverage of the compliance suite and a full DV test plan will be outlined. This talk highlights the results found testing some popular open source cores and outlines the methods to help address the DV phase of your next project. Key Takeaways1) SoC verification has historically represented 60-80% of the total project cost/time, RISC-V flexibility must also be supported with considerations for DV efficiency2) A test plan is only as good as the coverage metrics and quality of the reference model3) Simulation is fundamental to the SoC design and verification process, a processor DV plan must also include instruction stream tests for unexpected scenarios",
    "url": "https://player.vimeo.com/video/488684316?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T17:00:00+00:00",
    "utcendtime": "2020-12-10T18:00:00+00:00",
    "title": "Getting Started with RISC-V Verification what's next after Compliance Testing",
    "topic": "Verification",
    "kind": "Tutorial",
    "presenter": "Simon Davidmann \u00b7 Imperas Software Ltd",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDk1",
    "description": "Rocket chip is a chip generator that allows you to set up different configurations and these configurations are specified through Chisel parameters. Reverse Engineering of Rocket Chip journey starts from (Micro Electronic Research Lab) MERL which is working in the field of RISC V Processor development and Research. The purpose of Reverse Engineering of Rocket Chip is to get aware of the modules used in rocket chip and make Micro Architecture Specification (MAS) documentation as Rocket chip doesn't have any MAS documentation available yet. Another main purpose is to increase Rocket chip code reusability so every programmer can easily understand its code and manipulate it according to its desired configuration by changing Chisel Parameters. We decode basic modules of rocket chip by taking an understanding of its code line by line with the help of Scala and CHISEL expertise. We convert these modules code understanding into flow charts and start making Micro Architecture Specification (MAS) documentation. We make flow charts for different modules of Rocket Chip. After completion of flow charts, we make block diagrams of Rocket Chip modules according to its configuration pin in and out. Key TakeawaysThe audience will familiarize from the basic concept of rocket chipThe audience will familiarize from the microarchitecture of rocket chipWe will discuss how we started our Reverse Engineering on Rocket chipWe will discuss Micro Architecture Specification (MAS) documentation of Rocket chip",
    "url": "https://player.vimeo.com/video/488683328?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T17:00:00+00:00",
    "utcendtime": "2020-12-10T18:00:00+00:00",
    "title": "Reverse Engineering of Rocket Chip",
    "topic": "Hardware Cores/SoCs",
    "kind": "Tutorial",
    "presenter": "Roomi Naqvi \u00b7 Micro Electronic Research Lab -UIT",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDk0",
    "description": "Having an open-source ISA allows for novel tools to be introduced in teaching computer architecture. This is a highly relevant topic, given the number of universities currently pivoting course offerings to being based on RISC-V.The talk will present Ripes, an open-source application for visually simulating various in-order processor architectures implementing the RISC-V instruction set. Ripes is actively being used in teaching at a variety of universities across the world. In Ripes, users may write assembly or C code which is then seamlessly translated and executed on select architectures. The application visualizes the state of the processor datapath during execution, such as signal values, forwarding paths, and instructions present in the processor stages.Initially, a brief presentation will show the motivation behind Ripes and how it addresses some issues in traditional computer architecture education.Afterwards, the brunt of the talk will consist of a demo of Ripes, demonstrating capabilities such as:- Simulating different processor models and levels of abstraction in visualizing the processor- Cache simulation- C-language integrationKey TakeawaysUnderstand how visual simulators may aid in teaching a variety of concepts from computer architecture.See how Ripes ties in with traditional computer architecture teaching aids such as the Patterson & Hennessy book on RISC-V.Through the demo, experience how Ripes is a novel approach to teaching tools, providing a polished user interface which highlights how code executes on different architectures, whilst removing as many barriers between writing code and the simulation thereof.",
    "url": "https://player.vimeo.com/video/488681268?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T17:00:00+00:00",
    "utcendtime": "2020-12-10T18:00:00+00:00",
    "title": "Ripes: Teaching Computer Architecture Through Visual and Interactive Simulators",
    "topic": "Software & Tools",
    "kind": "Tutorial",
    "presenter": "Morten Borup Petersen \u00b7 EPFL",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDky",
    "description": "The end of Dennard scaling has led to a Cambrian explosion of energy-efficient, specialized silicon in everything from embedded microcontrollers to massive HPC systems. However, these heterogeneous clusters still require general-purpose processors to manage, monitor and coordinate their accelerators. An ideal host core is easy to use and easy to modify; efficient, performant, and reliable; able to support a diverse array of accelerators without creating new bottlenecks; and is free and open-source, so that architects can rapidly design, prototype and verify their systems.BlackParrot aims to be the default open-source, Linux-capable, cache-coherent, RISC-V multicore used by the world. Development efforts prioritize ease of use and silicon validation as first order design metrics, so users can quickly get started and trust their results will be representative of state-of-the-art ASIC designs.In this tutorial, we will provide an architectural overview of BlackParrot, focusing on the design principles and development process as well as the software and hardware ecosystems surrounding the core. We will demonstrate how to get up and running with a sample BlackParrot system, starting from how to run simple simulation-based tests with a synthesis-ready design. Then, we will integrate a BlackParrot multicore into a typical AXI-based system using standard design tools. Last, we will show how connect a sample accelerator to compose a heterogeneous accelerator SoC. Key TakeawaysIntroduce users to the BlackParrot microarchitecture and SoC building blocksFamiliarize users with the BlackParrot simulation-based verification infrastructureDemonstrate how to quickly compose multicore and accelerator-based BlackParrot designs",
    "url": "https://player.vimeo.com/video/488680907?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T18:15:00+00:00",
    "utcendtime": "2020-12-10T19:45:00+00:00",
    "title": "BlackParrot: An Agile Open-Source RISC-V Multicore for Accelerator SoCs",
    "topic": "Hardware Cores/SoCs",
    "kind": "Tutorial",
    "presenter": "Daniel Petrisko \u00b7 University of Washington",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDkx",
    "description": "The FORCE-RISCV Instruction Stream Generator (ISG) is an open source Instruction Stream Generator (ISG). It is a powerful verification tool for RISC-V based CPU design.The ISG is developed and released by IC-Lab of Futurewei, contributed to the OpenHW Group open source community. The open source initial offering is available since June 12, 2020 at: https://github.com/openhwgroup/force-riscv.The ISG currently supports 64-bit version of RISC-V with RV64I, M, A, Zicsr, F, D, C extensions, Machine, Supervisor, User modes, dynamic ISS interaction, dynamic Virtual Memory management, loops, configurable state transition, powerful and extensible Python scriptable test template writing framework etc.Future release will include but not limited to full Vector extension support, full paging exception control and advanced memory sub-system verification features, and 32-bit version of RISC-V.FORCE-RISCV ISG is a dynamic ISG, that executes each generated instruction using an ISS shared lib based on open source Spike ISS, thus knows all architectural machine state at any given moment. This enables much more intelligent and high-quality test generation, and can reach very good coverage results.All algorithms/data structures for the ISG are carefully designed to never sacrifice randomness while maintain very good performance. FORCE is blazingly fast, thus can scale very well to large thread counts for MP/MT CPU verification.Key TakeawaysLearn the unique capabilities and strength of FORCE-RISCV ISG.Realize potential benefits of introducing FORCE-RISCV ISG to their RISC-V based CPU or SoC projects.Get a chance to play with the FORCE-RISCV ISG first hand and experience its powerful features.",
    "url": "https://player.vimeo.com/video/488680907?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T18:15:00+00:00",
    "utcendtime": "2020-12-10T19:45:00+00:00",
    "title": "FORCE-RISC-V Open Source Instruction Stream Generator",
    "topic": "Software & Tools",
    "kind": "Tutorial",
    "presenter": "Noah Sherrill \u00b7 Futurewei Technologies",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDkw",
    "description": "Real-time operating systems enable developers to run a collection of tasks on a system and ensure that real-time requirements are met. As system complexity increases, it becomes more difficult to configure an RTOS to meet all possible operating scenarios. Developers must ensure that priority inversions, deadlocks, resource contention, race conditions, and other timing related problems cannot occur, regardless of the operating conditions of the system. Despite detailed analysis and rigorous verification, many design teams will select a larger and more powerful processor than is really needed to provide a margin of safety against unforeseen circumstances. An alternative is to assign each task to its own CPU core. This dramatically simplifies many of the scheduling and real-time issues around managing a collection of tasks. With the configurability and efficiency of RISC-V cores it is both possible and practical select and configure a core for a specific task, run just that task on the core, and power it down when the task is not active. This concept is illustrated using an example design that has both high and low compute complexity tasks, both with and without hard real-time constraints. The selection of the RISC-V core, configuration, and integration into a larger system are covered, as is programming and verification. To address the issue of practicality power, performance, and area (PPA) metrics for the exemplary system implemented in a 14 nm ASIC library are given. This example will be compared to an equivalent system using a traditional RTOS.  Key Takeaways Lean to use RISC-V based \"thread processors\" to replace RTOS and scheduler Understand performance and area impact of thread processors Master selecting and configuring a RISC-V core as a thread processor ",
    "url": "https://player.vimeo.com/video/488680907?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T18:15:00+00:00",
    "utcendtime": "2020-12-10T19:45:00+00:00",
    "title": "Embedded Software Reimagined: Thread Processors Implemented Using RISC-V",
    "topic": "System Architectures",
    "kind": "Tutorial",
    "presenter": "Russell Klein \u00b7 Mentor Graphics",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDg5",
    "description": "We will give a tour of the RISC-V cryptography extension, explaining how it caters for ever class of core: from deeply embedded to large servers. We will explain the new instructions and how they should be used, along with expected implementation costs and software performance improvements.Key TakeawaysHow the Cryptography extension is made up of Scalar and Vector components, and how these cater to different sizes of cores.Which instructions are available to smaller, scalar cores. Particularly for accelerating AES, SHA2, SM3 and SM4.Which Bit-manipulation instructions are \"borrowed\" for the cryptography extension, and what they are useful for.Which instructions are available as part of the vector extension, and how to use them. Particularly in relation to future Post Quantum Cryptography standards.",
    "url": "https://player.vimeo.com/video/488680907?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T20:00:00+00:00",
    "utcendtime": "2020-12-10T21:00:00+00:00",
    "title": "A Guide to the RISC-V Cryptography Extension",
    "topic": "Security & Functional Safety",
    "kind": "Tutorial",
    "presenter": "Ben Marshall \u00b7 University of Bristol",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDg4",
    "description": "Recently, we deployed an open-source, Linux Debian-capable processor on Amazon F1 FPGAs for our security research project. In this talk we present our experience in developing a platform that leverages virtio devices and gdb remote debugging for developing full SoCs.Virtio devices allow us to provide storage, networking, entropy, and potentially display capabilities to our platform, at a small development cost. Deploying in a hosted environment, we can leverage existing software to implement the I/O device models, simply adding a thin hardware layer that enables the host to write to the core's memory and raise interrupts on the core. Similarly, the CPU core on the FPGA has memory-mapped access to the \"control registers\" of the hosted Virtio device models. A major advantage of virtio is that it is widely used in the virtualization community, so there are device drivers and multiple implementations of device models readily available. We use the device models from tinyemu, which were easy to integrate into our host software.Our host software also takes care of loading ELF executables into the processor's memory and provides a gdbserver for bare metal debugging.Our processor, the host software, and the entire software stack are open source. Using an open source license enabled easy collaboration between MIT, Accelerated Tech, Cambridge University, and Bluespec, Inc., who all contributed to this platform.https://github.com/acceleratedtech/ssith-aws-fpga Key Takeaways A lightweight hosted model for deploying CPU cores on Amazon FPGAs with comprehensive I/O devices and debug supportFully open-source enclave-enhanced RV64GC processor and system integration software Integrates MIT, SRI/Cambridge, or Bluespec, Inc processor cores We plan to integrate MIT's out-of-order MI6 processor into the same architecture",
    "url": "https://player.vimeo.com/video/488682421?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T20:00:00+00:00",
    "utcendtime": "2020-12-10T21:00:00+00:00",
    "title": "Easily emulating full systems on Amazon FPGAs",
    "topic": "Software & Tools",
    "kind": "Tutorial",
    "presenter": "Jamey Hicks \u00b7 Accelerated Tech, Inc",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDg3",
    "description": "CORE-V-VERIF is an OpenHW Group project to develop, deploy, and execute pre-silicon functional verification of the OpenHW Group's CORE-V family of RISC-V cores. CORE-V open-source IP matches the quality of IP offered by established commercial providers and is verified with state-of-the-art, auditable flows.CORE-V-VERIF provides a silicon-proven, industrial-grade functional verification platform to the RISC-V community. The platform has been used to execute a complete verification cycle of the CV32E40P core and is currently being used to execute verification of the CV32A6 and CV64A6 cores. CORE-V-VERIF leverage verification components developed by the RISC-V community and will be continuously maintained and enhanced to integrate the latest best-practices and technology for the verification of future CORE-V cores.CORE-V-VERIF includes verification strategy and planning documents, and SystemVerilog/UVM code implementing an end-to-end simulation environment. Additionally, the platform supports an advanced SVA formal verification environment, which leverages the RISC-V ISA specification in SAIL and provides optimal integration with simulation. Finally, the platform supports the use of structural, functional, and mutation coverage metrics. CORE-V-VERIF leverages both open-source and commercial IPs and EDA technology.This session includes an in-depth analysis of the CORE-V-VERIF platform, and a quick-start training to deploy the platform in RISC-V verification projects. Silicon Labs, which is integrating CORE-V cores into IoT chips, shares its view of why verification is crucial to take open-source hardware to the next step.The CORE-V-VERIF project is hosted in the GitHub repository https://github.com/openhwgroup/core-v-verif.git, and is available to the community under the Solderpad 2.0 license. Key TakeawaysWhat is \"Industrial-Grade Verification\"?Why it is important and how to know if your project needs it.Use of detailed verification plans to answer the question, \"what does done look like?\"Use of coverage metrics to answer the question, \"are we done?\"How dynamic (simulation) and static (formal) verification are used to get your RISC-V core ready for tape-out.How to deploy the CORE-V-VERIF platform to your RISC-V core.",
    "url": "https://player.vimeo.com/video/488683882?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T20:00:00+00:00",
    "utcendtime": "2020-12-10T21:00:00+00:00",
    "title": "CORE-V-VERIF, an Industrial-Grade Verification Platform for RISC-V cores",
    "topic": "Verification",
    "kind": "Tutorial",
    "presenter": "Sven Beyer \u00b7 OneSpin Solutions GmbH",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDg2",
    "description": "Join us for this live-in-zoom session to meet the speakers and ask follow up questions from today's tutorial sessions.",
    "url": "https://player.vimeo.com/video/488683816?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T21:15:00+00:00",
    "utcendtime": "2020-12-10T22:00:00+00:00",
    "title": "LIVE Q&A Forum with Speakers",
    "topic": "Meet the Speakers: Room A",
    "kind": "Tutorial",
    "presenter": "Jeffrey Osier-Mixon \u00b7 Linux Foundation",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDgz",
    "description": "The innovative RISC-V Vector Extension (RVV) empowers RISC-V processors to raise the bar for SoC design. With its scalable vector registers, powerful instruction set and flexible configurations, it easily adapts to a wide range of complex computations in AI, Communication, Cryptography, DL/ML, Multimedia, and Scientific Computing. Due to its complexity, the RVV spec is complete, but quite sophisticated to digest for many interested in adopting it. As the most established vendors for RISC-V processor IPs, Andes Technology Corporation has been working on RVV processors and the associated SW support, and has delivered the first commercial RISC-V Vector Processor IP NX27V to its lead customers. Dr. Thang Tran, a Principle Architect of Andes and a veteran of HPC, is in charge of the microarchitecture of Andes Vector Processing Unit (VPU) families, first incorporated in NX27V. He joins RVV task group meetings regularly, follows the spec closely and contributes to the spec discussion. This 100-page tutorial requires no prior knowledge of vector processing. Dr. Tran will first provide the general background of vector processing, and then present the RVV architecture in depth, including vector registers, vector CSRs, load/store instructions, computation instructions, and mask and permute instructions. He will give examples with rich figure illustrations to provide insight for how to use RVV to develop efficient vector code. He will also introduce NX27V to give the context of a sample RVV vector processor. Key TakeawaysLearn about RISC-V vector extension ISA Learn how to program the vector processor with couple sample codes and alternative way to program Learn the benefits of vector processor in general and RISC-V vector processor in particular.",
    "url": "https://player.vimeo.com/video/488683816?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T22:00:00+00:00",
    "utcendtime": "2020-12-11T01:00:00+00:00",
    "title": "RISC-V Vector Extension Demystified",
    "topic": "Hardware Cores/SoCs",
    "kind": "Tutorial",
    "presenter": "Thang Tran \u00b7 Andes Technology Corp.",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDg1",
    "description": "Confused on what's what and who's who? Trying to figure out what we do and what we do not do? Want to know how to start, contribute and complete an extension? Wish to explore ecosystem interactions, dependencies, and development practices? Seeking to help RISC-V be successful and achieve world domination? Join us in this tutorial and learn all this and more.Key TakeawaysOrganization Structure and LeadersBasic Processes and PoliciesRolesIT Tools we useWebsite WalkthroughGithub WalkthroughResourcing Models",
    "url": "https://player.vimeo.com/video/488683816?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T22:00:00+00:00",
    "utcendtime": "2020-12-10T23:00:00+00:00",
    "title": "Nerds Guide to Navigating the RISC-V ISA & Ecosystem Technical Groups",
    "topic": "Community Ecosystem",
    "kind": "Tutorial",
    "presenter": "Stephano Cetola \u00b7 RISC-V International",
    "organization": null
  },
  {
    "link": "https://riscvsummit.app.swapcard.com/event/risc-v-summit/planning/UGxhbm5pbmdfMjc1NDg0",
    "description": "In February 2020 the processor trace specification for RISC-V was ratified, but implementing trace IP based on this specification document can be daunting. Trace is a very useful feature that is often under-utilized because it is misunderstood and considered complex and costly \u2013 we will demystify trace deployment process for you. This session will explain the current status of trace for RISC-V and also give you a preview of what may be added in the future. We will also look at Nexus trace specification so that you will understand the pros and cons of each approach to RISC-V trace. You will understand what you need to do to your RISC-V core to provide trace and you will understand how specific trace features can be later used to significantly speed up software development processes. We will guide you on everything you need to utilize trace, both in terms of on-chip setup and options and external components such as reference boards, debug probes and associated tools. While work is still ongoing to improve the trace specification, it is important to have a good understanding of how all the pieces fit together so you can see how you can efficiently deploy and use this incredibly powerful debugging technology. The way how the trace may efficiently be filtered and triggered using RISC-V debug trigger capabilities will be explained. Key Takeaways Understanding the current status of trace for RISC-V.Seeing what the future may hold for trace on RISC-V.Learning steps necessary to efficiently implement and use trace for RISC-V. Be aware about available resources and reference designs.",
    "url": "https://player.vimeo.com/video/488683816?title=0&byline=0&color=092864&autoplay=1&dnt=1&app_id=122963",
    "utcstarttime": "2020-12-10T22:00:00+00:00",
    "utcendtime": "2020-12-10T23:30:00+00:00",
    "title": "Overview of Trace for RISC-V",
    "topic": "Software & Tools",
    "kind": "Tutorial",
    "presenter": "Robert Chyla \u00b7 IAR Systems",
    "organization": null
  }
]